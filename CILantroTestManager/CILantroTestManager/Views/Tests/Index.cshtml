@model CILantroTestManager.ViewModels.Tests.TestsIndexViewModel

<h2>Manage tests</h2>

@if(Model.SearchResult.Count() > 0)
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th scope="col"><h5><strong>Test</strong></h5></th>
                <th scope="col" class="rotate-header"><h5><strong>IL source</strong></h5></th>
                <th scope="col" class="rotate-header"><h5><strong>EXE</strong></h5></th>
            </tr>
        </thead>
        <tbody>
            @foreach(var test in Model.SearchResult)
            {
                <tr>
                    <td>
                        <strong>@test.Name</strong>
                        <br />
                        <span class="badge badge-pill badge-primary">@test.CategoryName</span>
                        <span class="badge badge-pill badge-info">@test.SubcategoryName</span>
                    </td>
                    <td class="text-center">
                        @if (test.IsIlSourceAvailable)
                        {
                            <span class="fa fa-check fa-1dot5x"></span>
                        }
                        else
                        {
                            <button class="btn btn-light btn-sm btn-generate-il-source" type="button" data-test-id="@test.Id">
                                <span class="fa fa-wrench"></span>
                            </button>
                        }
                    </td>
                    <td class="text-center">
                        @if(test.IsExeAvailable)
                        {
                            <span class="fa fa-check fa-1dot5x"></span>
                        }
                        else
                        {
                            <button class="btn btn-light btn-sm btn-generate-exe" type="button" data-test-id="@test.Id">
                                <span class="fa fa-wrench"></span>
                            </button>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <text>No tests could be found.</text>
}

<div class="modal fade" id="modalGenerateIlSource">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Generate IL source</h5>
            </div>
            <div class="modal-body">
                <div class="logger text-sm-left" id="loggerGenerateIlSource"></div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modalGenerateExe">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Generate EXE</h5>
            </div>
            <div class="modal-body">
                <div class="logger text-sm-left" id="loggerGenerateExe"></div>
            </div>
        </div>
    </div>
</div>

<script>
    $(function() {
        $('.btn-generate-il-source').click(function () {
            var testId = $(this).data('test-id');
            
            $('#modalGenerateIlSource').modal({
                backdrop: 'static',
                keyboard: false
            });

            var generateIlSourceHub = $.connection.generateIlSourceHub;
            addLoggerFunctionsToHub(generateIlSourceHub, '#loggerGenerateIlSource');
            addFinishFunctionToHub(generateIlSourceHub);

            $.connection.hub.start().done(function () {
                generateIlSourceHub.server.generate(testId);
            });
        });

        $('.btn-generate-exe').click(function () {
            var testId = $(this).data('test-id');

            $('#modalGenerateExe').modal({
                backdrop: 'static',
                keyboard: false
            });

            var generateExeHub = $.connection.generateExeHub;
            addLoggerFunctionsToHub(generateExeHub, '#loggerGenerateExe');
            addFinishFunctionToHub(generateExeHub);

            $.connection.hub.start().done(function () {
                generateExeHub.server.generate(testId);
            });
        });
    });
</script>