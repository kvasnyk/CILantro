// <auto-generated />
using CILantroToolsWebAPI.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace CILantroToolsWebAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190210015346_CategoryAndSubcategoryForTests")]
    partial class CategoryAndSubcategoryForTests
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CILantroToolsWebAPI.DbModels.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("CILantroToolsWebAPI.DbModels.Subcategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CategoryId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Subcategories");
                });

            modelBuilder.Entity("CILantroToolsWebAPI.DbModels.Test", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CategoryId");

                    b.Property<string>("Name");

                    b.Property<string>("Path");

                    b.Property<Guid?>("SubcategoryId");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SubcategoryId");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("CILantroToolsWebAPI.DbModels.Subcategory", b =>
                {
                    b.HasOne("CILantroToolsWebAPI.DbModels.Category", "Category")
                        .WithMany("Subcategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CILantroToolsWebAPI.DbModels.Test", b =>
                {
                    b.HasOne("CILantroToolsWebAPI.DbModels.Category", "Category")
                        .WithMany("Tests")
                        .HasForeignKey("CategoryId");

                    b.HasOne("CILantroToolsWebAPI.DbModels.Subcategory", "Subcategory")
                        .WithMany("Tests")
                        .HasForeignKey("SubcategoryId");
                });
#pragma warning restore 612, 618
        }
    }
}
