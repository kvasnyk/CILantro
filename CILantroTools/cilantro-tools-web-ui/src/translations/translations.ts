const translations = {
	app: {
		name: 'CILantro Tools'
	},
	categories: {
		addCategory: 'New category',
		addSubcategory: 'New subcategory',
		categoryIsAssingedToTest: 'The category is assigned to a test.',
		subcategoryIsAssignedToTest: 'The subcategory is assigned to a test.',
		categories: 'Categories',
		categoryHasBeenAdded: 'The category has been added.',
		categoryHasBeenDeleted: 'The category has been deleted.',
		errorOccurredWhileAddingCategory: 'An error occurred while adding the category.',
		errorOccurredWhileAddingSubcategory: 'An error occurred while adding the subcategory.',
		errorOccurredWhileDeletingCategory: 'An error occurred while deleting the category.',
		errorOccurredWhileDeletingSubcategory: 'An error occurred while deleting the subcategory.',
		name: 'Name',
		noCategories: 'No categories have been found.',
		subcategoryHasBeenAdded: 'The subcategory has been added.',
		subcategoryName: 'Name',
		subcategoryHasBeenDeleted: 'The subcategory has been deleted.'
	},

	tests: {
		thereAreNotReadyTests: (count: number) => `${count} not ready. `,
		thereAreNotRunTests: (count: number) => `${count} not yet run. `,
		thereAreNotOkTests: (count: number) => `${count} with wrong run results. `,
		thereAreDisabledTests: (count: number) => `${count} disabled. `,
		errorOccurredWhileAddingTest: 'An error occurred while adding the test.',
		findTests: 'Find tests',
		noTestCandidates: 'No test candidates have been found.',
		noTests: 'No tests have been found.',
		testHasBeenAdded: 'The test has been added.',
		testOverview: 'Overview',
		tests: 'Tests',
		selectTestCategory: 'Select a category',
		selectTestSubcategory: 'Select a subcategory',
		testCategory: 'Category',
		testSubcategory: 'Subcategory',
		categoryHasBeenUpdated: 'The category has been updated.',
		subcategoryHasBeenUpdated: 'The category has been updated.',
		errorOccurredWhileUpdatingCategory: 'An error occurred while updating the category.',
		errorOccurredWhileUpdatingSubcategory: 'An error occurred while updating the subcategory.',
		generateIlSources: 'Generate IL sources',
		testIlSources: 'IL sources',
		testMainIlSource: 'Main IL source',
		ilSourcesHasBeenGenerated: 'IL sources has been generated.',
		errorOccurredWhileGeneratingIlSources: 'An error occurred while generating IL sources.',
		testExe: 'EXE',
		generateExe: 'Generate EXE',
		exeHasBeenGenerated: 'EXE has been generated.',
		errorOccurredWhileGeneratingExe: 'An error occurred while generating EXE.',
		runningExe: 'EXE',
		exeProcessStarted: 'EXE process started',
		exeProcessEnded: 'EXE process ended',
		testIO: 'I/O',
		testIOExamples: 'Examples',
		configureInput: 'Configure input',
		configureOutput: 'Configure output',
		emptyInput: 'Empty input',
		emptyLine: 'Empty line',
		emptyInputHasBeenUpdated: 'The empty input value has been updated.',
		errorOccurredWhileUpdatingEmptyInput: 'An error occurred while updating the empty input value.',
		testInput: 'Input',
		testOutput: 'Output',
		inputHasBeenUpdated: 'The input has been updated.',
		errorOccurredWhileUpdatingInput: 'An error occurred while updating the input.',
		outputHasBeenUpdated: 'The output has been updated.',
		errorOccurredWhileUpdatingOutput: 'An error occurred while updating the output.',
		outputHasBeenGenerated: 'The output has been generated.',
		errorOccurredWhileGeneratingOutput: 'An error occurred while generating the output.',
		ioExampleHasBeenAdded: 'The example has been added.',
		errorOccurredWhileAddingIoExample: 'An error occurred while adding the example.',
		noOutputGenerated: 'No output has been generated.',
		exampleNameIsEmpty: 'The example\'s name is empty',
		addIoExample: 'Add an I/O example',
		createdOn: 'Created',
		lastOpenedOn: 'Recently opened',
		lastRunOutcome: 'Last run result',
		chars: 'chars',
		errorOccurredWhileSearchingTests: 'An error occurred while searching tests.',
		errorOccurredWhileCopyingInput: 'An error occurred while copying the input.',
		excludeZero: 'Exclude zero',
		testHasBeenDisabled: 'The test has been disabled.',
		testHasBeenEnabled: 'The test has been enabled.',
		errorOccurredWhileDisablingTest: 'An error occurred while disabling the test.',
		errorOccurredWhileEnablingTest: 'An error occurred while enabling the test.',
		disabledReason: 'Disabled reason',
		disabledReasonHasBeenUpdated: 'The disabled reason has been updated.',
		errorOccurredWhileUpdatingDisabledReason: 'An error occurred while updating the disabled reason.'
	},

	runs: {
		runs: 'Test runs',
		newRun: 'New test run',
		full: 'Full',
		quick: 'Quick',
		type: 'Type',
		runHasBeenAdded: 'The run has been added.',
		errorOccurredWhileAddingRun: 'An error occurred while adding the run.',
		noRuns: 'No runs have been found.',
		runHasBeenDeleted: 'The run has been deleted.',
		errorOccurredWhileDeletingRun: 'An error occurred while deleting the run.',
		step: 'Step',
		item: 'Item',
		createdOn: 'Created on',
		testRunStep_GenerateInputFiles: 'Generating input files',
		testRunStep_GenerateExeOutputFiles: 'Generating EXE output files',
		testRunStep_GenerateCilAntroOutputFiles: 'Generating CILantro output files',
		testRunStep_CompareOutputFiles: 'Comparing output files',
		passed: 'passed',
		failed: 'failed',
		testsPassed: 'test(s) passed',
		testsFailed: 'test(s) failed'
	},

	shared: {
		anErrorOccurred: 'An error occurred. Please try again.',
		save: 'Add',
		noInfo: '---',
		type: 'Type',
		value: 'Value',
		minLength: 'Min length',
		maxLength: 'Max length',
		symbols: 'Symbols',
		smallLetters: 'az',
		bigLetters: 'AZ',
		digits: '09',
		otherSymbols: '#%',
		name: 'Name',
		resultsPerPage: 'Results per page:',
		ascending: 'Asc',
		descending: 'Desc',
		orderBy: 'Order by:',
		minValue: 'Min value',
		maxValue: 'Max value',
		type_byte: 'byte',
		type_short: 'short',
		type_bool: 'bool',
		type_string: 'string',
		type_const: 'const',
		type_int: 'int',
		type_char: 'char',
		type_decimal: 'decimal',
		type_double: 'double',
		type_float: 'float',
		type_long: 'long',
		type_sbyte: 'sbyte',
		type_uint: 'uint',
		type_ulong: 'ulong',
		type_ushort: 'ushort',
		description: 'Description'
	}
};

export default translations;
